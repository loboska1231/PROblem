
services:
  database:
    image: postgres:latest
    container_name: database-local
    restart: always
    volumes:
      - ./psql-db:/var/lib/postgresql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "db"
      POSTGRES_USER: sql
      POSTGRES_PASSWORD: sql

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-broker:
    image: confluentinc/cp-kafka:7.4.0
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker:19092,EXTERNAL://${DOCKER_HOST_IP:-kafka-broker}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1


  postgres-keycloak:
    image: postgres:15
    container_name: postgres-keycloak
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: keycloak_user
      POSTGRES_PASSWORD: keycloak_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - keycloak-net

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    container_name: keycloak
    ports:
      - "9090:8080"
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres-keycloak
      KC_DB_URL_DATABASE: keycloak_db
      KC_DB_USERNAME: keycloak_user
      KC_DB_PASSWORD: keycloak_password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_IMPORT: /opt/keycloak/data/import/copyria_realm.json
    depends_on:
      - postgres-keycloak
    networks:
      - keycloak-net
    volumes:
      - ./order_service/misc/keycloak/copyria_realm.json:/opt/keycloak/data/import/copyria_realm.json
    command: start-dev --import-realm
  car_service:
    build:
      context: .
    container_name: car_service
    volumes:
      - ./backend:/app
    working_dir: /app
    command: >
      sh -c "java -jar car_service.jar"
    restart: on-failure
    ports:
      - "8080:8080"
  order_service:
    build:
      context: .
    container_name: order_service
    volumes:
      - ./backend:/app
    working_dir: /app
    command: >
      sh -c "java -jar order_service.jar"
    restart: on-failure
    ports:
      - "8081:8081"
volumes:
  postgres_data:

networks:
  keycloak-net: