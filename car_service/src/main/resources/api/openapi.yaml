openapi: "3.1.0"
info:
  title: "CopyRIA API"
  description: "This is a demo specification of the Car Service"
  version: "1.0.0"

servers:

    - url: "https://localhost:8081"
      description: "Local Car Service"
security:
  - BearerAuth: []
paths:
  /api/v1/cars:
    get:
      tags:
        - Car
      summary: "Get list of cars"
      operationId: "getCars"
      parameters:
        - name: brand
          in: query
          required: false
          schema:
            type: string
        - name: model
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: "List of cars"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CarResponse"

    post:
      tags:
        - Car
      summary: "Create a new car"
      operationId: "createCar"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCar"
      responses:
        '200':
          description: "Car created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarResponse"
        '400':
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/v1/cars/{id}:
    get:
      tags:
        - Car
      summary: "Get car by ID"
      operationId: "getCarById"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: "Car found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarResponse"
        '404':
          description: "Car not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      tags:
        - Car
      summary: "Delete car by ID"
      operationId: "deleteCarById"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: "Car deleted"
        '404':
          description: "Car not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/cars/byOrder/{id}:
    get:
      tags:
        - Car
      summary: "Get car by order ID"
      operationId: "getCarByOrderId"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: "Car found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarResponse"
        '404':
          description: "Car not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    CreateCar:
      type: object
      required:
        - brand
        - model
      properties:
        brand:
          type: string
          minLength: 3
          maxLength: 30
        model:
          type: string
          minLength: 1
          maxLength: 40
        orderId:
          type: integer
          format: int32
          description: "ID of the associated order (optional)"

    CarResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        brand:
          type: string
        model:
          type: string
        orderId:
          type: integer
          format: int32

    Error:
      type: object
      properties:
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        details:
          type: object
          additionalProperties:
            type: string
      required:
        - message
        - timestamp
        - details

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
